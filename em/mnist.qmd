---
title: Expectation-Maximization Part 2: MNIST
jupyter: julia-1.10
---

The MNIST dataset consists of 70,000 grayscale images of handwritten digits.

```{julia}
#| fig-height: 3
#| fig-width: 3
#| fig-cap: First six digits from the MNIST training dataset

using Colors, MLDatasets, Plots

pixels, labels = MNIST(split=:train)[:]

plts = [1 .- Gray.(img') |> plot for img in eachslice(pixels[:, :, 1:3], dims=3)]
plot(plts..., layout = (1, 3), axis = false, ticks = false)
```

# Bernoulli Mixture Model

\begin{equation}
\mathcal{L}(\pi, \theta | X) = \prod_{i=1}^N \left( \sum_{k=1}^K \pi_k \prod_{j=1}^D \theta_{kj}^{X_{ij}} (1 - \theta)^{(1 - X_{ij})} \right)
\end{equation}

```{julia}
binned_pixels = pixels .> 0.5

#plot(1 .- Gray.(binned_pixels[:, :, 1]'), axis = false, ticks = false)
display(binned_pixels[:, :, 1]')
```
